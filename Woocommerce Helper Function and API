//Woocommerce Shortcode To fetch related items in home page

[recent_products]
[featured_products]
[products]
[product_category]
[sale_products]
[top_rated_products]
[product_attribute]
[related_products]

//wordpress maximum upload file size htaccess Method

php_value upload_max_filesize 64M
php_value post_max_size 64M
php_value max_execution_time 300
php_value max_input_time 300

//Steps For Woocommerce Themedevelopment From Scratch

1. Install Woocommerce Plugin
2. Import Dummy Product Data(XML File)
3. Create Theme File (Style.css, index.php, Function.php, inc/enqueu.php)
4. After Activation of our theme, the message will show "your them is not support woocommerce".
5. Create file in inc/support.php
6. Includes file enque.php, theme_support.php and support.php in function.php file.
    <?php 
        include( get_template_directory(). '/inc/enqueue.php' );
        include( get_template_directory(). '/inc/theme_support.php' );
        include( get_template_directory(). '/inc/support.php' );
7. Enque style and script in enqueue.php file

<?php  

        function eshopper_style_nscripts(){
          wp_enqueue_style('bootstrap-css', get_template_directory_uri() .'/css/bootstrap.min.css', array(), '1.0', 'all' );
          wp_enqueue_style('font-awesome', get_template_directory_uri() .'/css/font-awesome.min.css', array(), '1.0', 'all' );
          wp_enqueue_style('prettyPhoto-css', get_template_directory_uri() .'/css/prettyPhoto.css', array(), '1.0', 'all' );
          wp_enqueue_style('price-range-css', get_template_directory_uri() .'/css/price-range.css', array(), '1.0', 'all' );
          wp_enqueue_style('main-css', get_template_directory_uri() .'/css/main.css', array(), '1.0', 'all' );

          wp_enqueue_script('bootstrap-js', get_template_directory_uri() .'/js/bootstrap.min.js', array('jquery'), '1.0', true );
          wp_enqueue_script('jquery-scrollUp', get_template_directory_uri() .'/js/jquery.scrollUp.min.js', array('jquery'), '1.0', true );
          wp_enqueue_script('price-range-js', get_template_directory_uri() .'/js/price-range.js', array('jquery'), '1.0', true );
          wp_enqueue_script('prettyPhoto-js', get_template_directory_uri() .'/js/jquery.prettyPhoto.js', array('jquery'), '1.0', true );
          wp_enqueue_script('main-js', get_template_directory_uri() .'/js/main.js', array('jquery'), '1.0', true );
        }
        add_action('wp_enqueue_scripts', 'eshopper_style_nscripts');
        
8. Add Theme Support Code in inc/support.php (woocommerce third party integration)
<?php 

// Add woocommerce support
add_action( 'after_setup_theme', 'eshopper_woocommerce_support' );
function eshopper_woocommerce_support() {
    add_theme_support( 'woocommerce' );
}
9. Now we overwrite the Plugin Template File.
  /plugin/wocommerce/templates/ copy to /ourthemename/wocommerce/ paste all file.
  
10. Now Template is ovewrite check
   go to archive-product page and modify title with some hard text, then check the file will overwritten. 
11. Now create header.php, footer.php and index.php include these file in other file whenever required.

12. Time for Shop Page Customization (archive-product.php).
13. When customization the woocommerce style doesn't support, because of woocommerce support nested wise style
    format:  .woocommerce .product .ul li a{}
    
14. Include global body class in body tag: <?php body_class(); ?>
15. Now we can create globle wrapper woocommerce/global/wrapper-start.php and woocommerce/global/wrapper-end.php 
	wrapper-start.php: echo '<div id="container"><div id="content" role="main">'; 
    wrapper-end.php: echo '</div></div>';
    
16. customize product title, price and add to cart button as per design, we can customize content-product.php file.

17. // remove breadcrumb

remove_action('woocommerce_before_main_content', 'woocommerce_breadcrumb', 20 );

// remove result count

remove_action('woocommerce_before_shop_loop', 'woocommerce_result_count', 20 );
//remove product archive ordering
remove_action('woocommerce_before_shop_loop', 'woocommerce_catalog_ordering', 30 );
//remove product archive rating
remove_action('woocommerce_after_shop_loop_item_title', 'woocommerce_template_loop_rating', 5 );

// remove archive product default sidebar

remove_action('woocommerce_sidebar','woocommerce_get_sidebar', 10);

18. Add icon in add to cartbutton
 	go to loop/add-to-cart.php file and add icon class before %s.

19. crate custome sidebar in theme_support.php(Register Sidebar first)

<?php 

add_action( 'widgets_init', 'eshoppere_widgets_init' );
function eshoppere_widgets_init() {
    register_sidebar( array(
        'name' => __( 'Shop Page Sidebar', 'theme-slug' ),
        'id' => 'sidebar-shop',
        'description' => __( 'Widgets in this area will be shown on Shop and product Category page.', 'theme-slug' ),
        'before_widget' => '<li id="%1$s" class="widget shop-widget %2$s">',
	'after_widget'  => '</li>',
	'before_title'  => '<h2 class="shopwidgettitle">',
	'after_title'   => '</h2>',
    ) );
	
	register_sidebar( array(
        'name' => __( 'Single Product Sidebar', 'theme-slug' ),
        'id' => 'single-product',
        'description' => __( 'Widgets in this area will be shown on single product page.', 'theme-slug' ),
        'before_widget' => '<li id="%1$s" class="widget single-product %2$s">',
	'after_widget'  => '</li>',
	'before_title'  => '<h2 class="singleproductwidgettitle">',
	'after_title'   => '</h2>',
    ) );
	
	register_sidebar( array(
        'name' => __( 'Page Sidebar', 'theme-slug' ),
        'id' => 'page-product',
        'description' => __( 'Widgets in this area will be shown on  page.', 'theme-slug' ),
        'before_widget' => '<li id="%1$s" class="widget page-widget %2$s">',
	'after_widget'  => '</li>',
	'before_title'  => '<h2 class="pagewidgettitle">',
	'after_title'   => '</h2>',
    ) );
	
	
	
	
}

20. After Register call sidebar widget in sidebar section

<?php if ( is_active_sidebar( 'sidebar-shop' ) ) : ?>
<?php dynamic_sidebar( 'sidebar-shop' ); ?>
<?php endif; ?>

21. Put Appropriate widget in sidebar section as per requirement (Woocommerce Ajax product filter: Advance ajax product filter) and download and upload and activate.
22. Customize Add to cart button. Go to file and search function "woocommerce_template_loop_add_to_cart" copy from content-product and this function exist in plugin folder /plugin/woocommerce/includes/wc-template-functions.php
    and this function return data to our overwrite template function which exist in /themename/woocommerce/loop/add-to-cart.php and add icon near the %s symbol.
    global $product;

echo apply_filters( 'woocommerce_loop_add_to_cart_link',
	sprintf( '<a rel="nofollow" href="%s" data-quantity="%s" data-product_id="%s" data-product_sku="%s" class="%s"><i class="fa fa-shopping-cart"></i> %s</a>',
		esc_url( $product->add_to_cart_url() ),
		esc_attr( isset( $quantity ) ? $quantity : 1 ),
		esc_attr( $product->id ),
		esc_attr( $product->get_sku() ),
		esc_attr( isset( $class ) ? $class : 'button' ),
		esc_html( $product->add_to_cart_text() )
	),
$product );

23. Customization of single-product.php file and div class as per design and style.
24. Single Product Image customization(Slider):
	-go to content-single-product.php
	-copy function woocommerce_show_product_images and search where it exist in plugin file.
	-it exist in /plugin/woocommerce/includes/wc-template-functions.php.It is here
		if ( ! function_exists( 'woocommerce_show_product_images' ) ) {

	/**
	 * Output the product image before the single product summary.
	 *
	 * @subpackage	Product
	 */
	function woocommerce_show_product_images() {
		wc_get_template( 'single-product/product-image.php' );
		}
	}
	-this function back to you exists in theme woocommerce folder that is wc_get_template( 'single-product/product-image.php' );
	-In product-image.php file, the function "woocommerce_product_thumbnails" function exists and find it.
	-to customization of sigle product slider:
	   1. first findout the hook that is where it is from exist.
	   2. secondly, after find the action hook, then remove it using remove_action('woocommerce_product_thumbnails', 'woocommerce_show_product_thumbnails', 20);  
	   3. after remove action we can hook the customized image carousel funtion to hook the same hook function where remove action hook used that is:
	      "woocommerce_product_thumbnails" hook using add_action('woocommerce_product_thumbnails','kanchan_eshop_add_carosuelon_product_page')
	      
	 add_action('woocommerce_product_thumbnails', 'kanchan_eshop_add_carosuelon_product_page');

function kanchan_eshop_add_carosuelon_product_page(){
	global $post, $product, $woocommerce;

$attachment_ids = $product->get_gallery_attachment_ids();
		if($attachment_ids):
	
	?>
						<div id="similar-product" class="carousel slide" data-ride="carousel">
								
								  <!-- Wrapper for slides -->
								    <div class="carousel-inner">
									<?php 
										$i = 0;
										foreach($attachment_ids as $attachment_id ):
										$image_link = wp_get_attachment_url( $attachment_id );
										?> <div class="item  <?php if( $i == 0 ){ echo 'active';} ?>">
										  <img src="<?php echo $image_link;  ?>" alt="">
										  
										</div>
										<?php $i++;  endforeach; ?>
										
									</div>

								  <!-- Controls -->
								  <a class="left item-control" href="#similar-product" data-slide="prev">
									<i class="fa fa-angle-left"></i>
								  </a>
								  <a class="right item-control" href="#similar-product" data-slide="next">
									<i class="fa fa-angle-right"></i>
								  </a>
							</div>
	<?php
	
	endif;
}



	      

25. Show cart contents / total in header.

To display the cart contents and total in your template use something like:
<a class="cart-customlocation" href="<?php echo wc_get_cart_url(); ?>" title="<?php _e( 'View your shopping cart' ); ?>"><?php echo sprintf ( _n( '%d item', '%d items', WC()->cart->get_cart_contents_count() ), WC()->cart->get_cart_contents_count() ); ?> - <?php echo WC()->cart->get_cart_total(); ?></a>

To ajaxify your cart viewer so it updates when an item is added (via ajax) use:

add_filter('add_to_cart_fragments', 'woocommerce_header_add_to_cart_fragment');
 
function woocommerce_header_add_to_cart_fragment( $fragments ) {
	global $woocommerce;
	
	ob_start();
	
	?>
	<a class="cart-customlocation" href="<?php echo $woocommerce->cart->get_cart_url(); ?>" title="<?php _e('View your shopping cart', 'woothemes'); ?>"><?php echo sprintf(_n('%d item', '%d items', $woocommerce->cart->cart_contents_count, 'woothemes'), $woocommerce->cart->cart_contents_count);?> - <?php echo $woocommerce->cart->get_cart_total(); ?></a>
	<?php
	
	$fragments['a.cart-customlocation'] = ob_get_clean();
	
	return $fragments;
}

26. Geting single product meta field value with custom function

function eshopper_get_sku_after_title(){
			global $product;
			$sku = $product->get_sku();
			$sku_num = ( $sku ? $sku : 'N/A' );
			?>
			<div class="custom-sku"> 
			<?php    _e('Web Id: ', 'eshopper');  echo $sku_num; ?>
			</div>
		<?php 
			
		}		

add_action('woocommerce_single_product_summary', 'eshopper_get_sku_after_title', 6 );

remove_action('woocommerce_single_product_summary', 'woocommerce_template_single_excerpt', 20 );
function eshopper_product_ava (){
	global $product;
	
	$isstock = ($product->is_in_stock( ) ? 'Yes': 'No');
	echo '<div class="eshopper-aval">';
	_e('Availability: ','eshopper' );  echo $isstock;
	echo '</div>';
}
add_action('woocommerce_single_product_summary', 'eshopper_product_ava', 39 );


function add_brand_to_product_page(){
	$all_terms = wp_get_post_terms( get_the_Id(), 'brand' );
	foreach($all_terms as $term ){
		if($term->name){
			echo '<b>Brand: </b>'.$term->name;
		}
	}
	
}

add_action('woocommerce_single_product_summary', 'add_brand_to_product_page', 45 );


function custom_socialshare(){
	?>
	<div class="shoiacl-product"> 
		<a class="btn btn-primary " href=""> <i class="fa fa-facebook"></i> Facebook </a>
		<a class="btn btn-primary " href=""> <i class="fa fa-google-plus"></i> Google Plus </a>
		
	
	</div>
	<?php 
}
add_action('woocommerce_single_product_summary', 'custom_socialshare', 50 );

27. Creating a custom tabs for single product page

-first customized single-product/tabs/tabs.php file as per design
<?php
/**
 * Single Product tabs
 *
 * This template can be overridden by copying it to yourtheme/woocommerce/single-product/tabs/tabs.php.
 *
 * HOWEVER, on occasion WooCommerce will need to update template files and you (the theme developer).
 * will need to copy the new files to your theme to maintain compatibility. We try to do this.
 * as little as possible, but it does happen. When this occurs the version of the template file will.
 * be bumped and the readme will list any important changes.
 *
 * @see 	    http://docs.woothemes.com/document/template-structure/
 * @author  WooThemes
 * @package WooCommerce/Templates
 * @version 2.4.0
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

/**
 * Filter tabs and allow third parties to add their own.
 *
 * Each tab is an array containing title, callback and priority.
 * @see woocommerce_default_product_tabs()
 */
$tabs = apply_filters( 'woocommerce_product_tabs', array() );

if ( ! empty( $tabs ) ) : ?>

	<div class="category-tab shop-details-tab">
		<div class="col-sm-12">
			<ul class="nav nav-tabs">
			
				<?php  $i =0;  foreach ( $tabs as $key => $tab ) : ?>
					<li class="<?php echo esc_attr( $key ); ?>_tab  <?php if($i == 0){ echo ' active'; } ?> ">
						<a data-toggle="tab" href="#tab-<?php echo esc_attr( $key ); ?>"><?php echo apply_filters( 'woocommerce_product_' . $key . '_tab_title', esc_html( $tab['title'] ), $key ); ?></a>
					</li>
				<?php $i++; endforeach; ?>
			</ul>
			<div class="tab-content">
				<?php $q = 0; foreach ( $tabs as $key => $tab ) : ?>
					<div class="panel entry-content wc-tab tab-pane fade <?php if($q == 0 ): ?>active in  <?php endif; ?>" id="tab-<?php echo esc_attr( $key ); ?>">
						<?php call_user_func( $tab['callback'], $key, $tab ); ?>
					</div>
				<?php $q++; endforeach; ?>
			</div>
		</div>
	</div>

<?php endif; ?>

-then add more tabs to add custom fuction in support.php file

//add tabs in product page

add_filter( 'woocommerce_product_tabs', 'eshopper_woo_new_product_tab' );
function eshopper_woo_new_product_tab( $tabs ) {
	
	// Adds the new tab
	
	$tabs['company_tab'] = array(
		'title' 	=> __( 'Company Profile', 'woocommerce' ),
		'priority' 	=> 50,
		'callback' 	=> 'woo_new_product_tab_company_profile_content'
	);
	$tabs['tags_tab'] = array(
		'title' 	=> __( 'Tags', 'woocommerce' ),
		'priority' 	=> 50,
		'callback' 	=> 'woo_new_product_tab_tags_content'
	);
	
	return $tabs;

}

-define callback function


function woo_new_product_tab_company_profile_content() {
$brandcontents = wp_get_post_terms( get_the_Id(), 'brand' );
	// The new tab content
foreach($brandcontents as $brandcontent ):
//var_dump($brandcontent);
//get_term_meta($term->term_id, 'cat_term_img', true );
if($brandcontent){
		
			echo '<h2><b>Brand: </b>'.$brandcontent->name.'</h2>';
			echo '<img src="'.get_term_meta($brandcontent->term_id, 'cat_term_img', true ).'" alt="" width="200px" height="200px" style="display:block" />';
			echo '<p style="margin:30px 0;">'.$brandcontent->description.'</p>';
		
		}
	
endforeach;
	
}

// callback function of tags tab
function woo_new_product_tab_tags_content(){
	$alltags = wp_get_post_terms( get_the_Id(), 'product_tag' );
	//var_dump($alltags);
	echo '<p>';
	foreach($alltags as $alltag ):
		echo '<b>'.$alltag->name.'</b> ';
	endforeach;
	echo '</p>';
	
}
// eshopper prodyct tad odering 

add_filter( 'woocommerce_product_tabs', 'eshopper_reorder_tabs', 98 );
function eshopper_reorder_tabs( $tabs ) {
	$tabs['description']['priority'] = 5;
	$tabs['company_tab']['priority'] = 10;
	$tabs['tags_tab']['priority'] = 15;
	$tabs['reviews']['priority'] = 20;	
	
	return $tabs;
}


28. for cart we can use page.php template


===============================================================================================================


// remove default sorting dropdown in StoreFront Theme
 
add_action('init','delay_remove');
 
function delay_remove() {
remove_action( 'woocommerce_after_shop_loop', 'woocommerce_catalog_ordering', 10 );
remove_action( 'woocommerce_before_shop_loop', 'woocommerce_catalog_ordering', 10 );
}


// remove default sorting dropdown
 
remove_action( 'woocommerce_before_shop_loop', 'woocommerce_catalog_ordering', 30 );

// Change number or products per row to 3
add_filter('loop_shop_columns', 'loop_columns');
if (!function_exists('loop_columns')) {
	function loop_columns() {
		return 3; // 3 products per row
	}
}


// Override theme default specification for product # per row
function loop_columns() {
return 5; // 5 products per row
}
add_filter('loop_shop_columns', 'loop_columns', 999);


add_filter( 'loop_shop_per_page', 'new_loop_shop_per_page', 20 );

function new_loop_shop_per_page( $cols ) {
  // $cols contains the current number of products per page based on the value stored on Options -> Reading
  // Return the number of products you wanna show per page.
  $cols = 9;
  return $cols;
}


// Removes showing results in Storefront theme
 
add_action('init','delay_remove_result_count');
 
function delay_remove_result_count() {
remove_action( '<a href="#">woocommerce</a>_after_shop_loop', '<a href="#">woocommerce</a>_result_count', 20 );
remove_action( '<a href="#">woocommerce</a>_before_shop_loop', '<a href="#">woocommerce</a>_result_count', 20 );
}

//WooCommerce: Add Stock Quantity on Shop Page

function show_stock() {
global $product;
if ( $product->stock ) { // if manage stock is enabled 
if ( number_format($product->stock,0,'','') < 3 ) { // if stock is low
echo '<div class="remaining">Only ' . number_format($product->stock,0,'','') . ' left in stock!</div>';
} else {
echo '<div class="remaining">' . number_format($product->stock,0,'','') . ' left in stock</div>'; 
}
}
}
 
add_action('woocommerce_after_shop_loop_item','show_stock', 10);

add_action('woocommerce_shop_loop_item_title','print_free_shipping');

function print_free_shipping(){
	echo "Free Shipping!!!";
}


// Add custom field to shop loop
 
add_action( 'woocommerce_after_shop_loop_item_title', 'ins_woocommerce_product_excerpt', 35, 2);  
 
if (!function_exists('ins_woocommerce_product_excerpt'))
{
function ins_woocommerce_product_excerpt() {
global $post;
if ( is_home() || is_shop() || is_product_category() || is_product_tag() ) {
echo '<span class="excerpt">';
echo get_post_meta( $post->ID, 'special', true );
echo '</span>';
}
}
}

//Conditional Tags

is_woocommerce()
is_shop()
is_product_category()
is_product_category( 'shirts' )
is_product_category( array( 'shirts', 'games' ) )

is_product_tag()
is_product_tag( 'shirts' )
is_product_tag( array( 'shirts', 'games' ) )

//Single product page

is_product()

//cart page
is_cart()

//Checkout page
is_checkout()

//Customer account pages

is_account_page()


//Endpoint

is_wc_endpoint_url() //Returns true when viewing a WooCommerce endpoint

is_wc_endpoint_url( 'order-pay' ) //When the endpoint page for order pay is being displayed.

is_wc_endpoint_url( 'order-received' ) //When the endpoint page for order received is being displayed.

is_wc_endpoint_url( 'view-order' )
When the endpoint page for view order is being displaye

is_wc_endpoint_url( 'edit-account' )
When the endpoint page for edit account is being displayed.

is_wc_endpoint_url( 'edit-address' )
When the endpoint page for edit address is being displayed.

is_wc_endpoint_url( 'lost-password' )
When the endpoint page for lost password is being displayed.

is_wc_endpoint_url( 'customer-logout' )
When the endpoint page for customer logout  is being displayed.

is_wc_endpoint_url( 'add-payment-method' )
When the endpoint page for add payment method is being displayed.

Ajax request
is_ajax()
Returns true when the page is loaded via ajax.


//Working example

if ( is_product_category() ) {
  
  if ( is_product_category( 'shirts' ) ) {
    echo 'Hi! Take a look at our sweet tshirts below.';
  } elseif ( is_product_category( 'games' ) ) {
    echo 'Hi! Hungry for some gaming?';
  } else {
    echo 'Hi! Check our our products below.';
  }

}

//WooCommerce: add notice @ cart to show remaining amount to reach any of the free shipping thresholds

/**
* @snippet Notice with $$$ remaining to Free Shipping @ <a href="#">WooCommerce</a> Cart
* @how-to Watch tutorial @ https://businessbloomer.com/?p=19055
* @sourcecode https://businessbloomer.com/?p=442
* @author Rodolfo Melogli
* @testedwith <a href="#">WooCommerce</a> 3.0.5
*/
 
function bbloomer_free_shipping_cart_notice_zones() {
 
global $<a href="#">woocommerce</a>;
 
// Get Free Shipping Methods for Rest of the World Zone & populate array $min_amounts
 
$default_zone = new WC_Shipping_Zone(0);
$default_methods = $default_zone->get_shipping_methods();
 
foreach( $default_methods as $key => $value ) {
    if ( $value->id === "free_shipping" ) {
      if ( $value->min_amount > 0 ) $min_amounts[] = $value->min_amount;
    }
}
 
// Get Free Shipping Methods for all other ZONES & populate array $min_amounts
 
$delivery_zones = WC_Shipping_Zones::get_zones();
 
foreach ( $delivery_zones as $key => $delivery_zone ) {
  foreach ( $delivery_zone['shipping_methods'] as $key => $value ) {
    if ( $value->id === "free_shipping" ) {
    if ( $value->min_amount > 0 ) $min_amounts[] = $value->min_amount;
    }
  }
}
 
// Find lowest min_amount
 
if ( is_array($min_amounts) ) {
 
$min_amount = min($min_amounts);
 
// Get Cart Subtotal inc. Tax excl. Shipping
 
$current = WC()->cart->subtotal;
 
// If Subtotal < Min Amount Echo Notice
// and add "Continue Shopping" button
 
if ( $current < $min_amount ) {
$added_text = esc_html__('Get free shipping if you order ', '<a href="#">woocommerce</a>' ) . wc_price( $min_amount - $current ) . esc_html__(' more!', '<a href="#">woocommerce</a>' );
$return_to = apply_filters( '<a href="#">woocommerce</a>_continue_shopping_redirect', wc_get_raw_referer() ? wp_validate_redirect( wc_get_raw_referer(), false ) : wc_get_page_permalink( 'shop' ) );
$notice = sprintf( '<a href="%s" class="button wc-forward">%s</a> %s', esc_url( $return_to ), esc_html__( 'Continue Shopping', '<a href="#">woocommerce</a>' ), $added_text );
wc_print_notice( $notice, 'notice' );
}
 
}
 
}
 
add_action( '<a href="#">woocommerce</a>_before_cart', 'bbloomer_free_shipping_cart_notice_zones' );







