//Woocommerce Shortcode To fetch related items in home page

[recent_products]
[featured_products]
[products]
[product_category]
[sale_products]
[top_rated_products]
[product_attribute]
[related_products]

//wordpress maximum upload file size htaccess Method

php_value upload_max_filesize 64M
php_value post_max_size 64M
php_value max_execution_time 300
php_value max_input_time 300

//Steps For Woocommerce Themedevelopment From Scratch

1. Install Woocommerce Plugin
2. Import Dummy Product Data(XML File)
3. Create Theme File (Style.css, index.php, Function.php, inc/enqueu.php)
4. After Activation of our theme, the message will show "your them is not support woocommerce".
5. Create file in inc/support.php
6. Includes file enque.php, theme_support.php and support.php in function.php file.
    <?php 
        include( get_template_directory(). '/inc/enqueue.php' );
        include( get_template_directory(). '/inc/theme_support.php' );
        include( get_template_directory(). '/inc/support.php' );
7. Enque style and script in enqueue.php file

<?php  

        function eshopper_style_nscripts(){
          wp_enqueue_style('bootstrap-css', get_template_directory_uri() .'/css/bootstrap.min.css', array(), '1.0', 'all' );
          wp_enqueue_style('font-awesome', get_template_directory_uri() .'/css/font-awesome.min.css', array(), '1.0', 'all' );
          wp_enqueue_style('prettyPhoto-css', get_template_directory_uri() .'/css/prettyPhoto.css', array(), '1.0', 'all' );
          wp_enqueue_style('price-range-css', get_template_directory_uri() .'/css/price-range.css', array(), '1.0', 'all' );
          wp_enqueue_style('main-css', get_template_directory_uri() .'/css/main.css', array(), '1.0', 'all' );

          wp_enqueue_script('bootstrap-js', get_template_directory_uri() .'/js/bootstrap.min.js', array('jquery'), '1.0', true );
          wp_enqueue_script('jquery-scrollUp', get_template_directory_uri() .'/js/jquery.scrollUp.min.js', array('jquery'), '1.0', true );
          wp_enqueue_script('price-range-js', get_template_directory_uri() .'/js/price-range.js', array('jquery'), '1.0', true );
          wp_enqueue_script('prettyPhoto-js', get_template_directory_uri() .'/js/jquery.prettyPhoto.js', array('jquery'), '1.0', true );
          wp_enqueue_script('main-js', get_template_directory_uri() .'/js/main.js', array('jquery'), '1.0', true );
        }
        add_action('wp_enqueue_scripts', 'eshopper_style_nscripts');
        
8. Add Theme Support Code in inc/support.php (woocommerce third party integration)
<?php 

// Add woocommerce support
add_action( 'after_setup_theme', 'eshopper_woocommerce_support' );
function eshopper_woocommerce_support() {
    add_theme_support( 'woocommerce' );
}
9. Now we overwrite the Plugin Template File.
  /plugin/wocommerce/templates/ copy to /ourthemename/wocommerce/ paste all file.
  
10. Now Template is ovewrite check
   go to archive-product page and modify title with some hard text, then check the file will overwritten. 
11. Now create header.php, footer.php and index.php include these file in other file whenever required.

12. Time for Shop Page Customization (archive-product.php).
13. When customization the woocommerce style doesn't support, because of woocommerce support nested wise style
    format:  .woocommerce .product .ul li a{}
    
14. Include global body class in body tag: <?php body_class(); ?>
15. Now we can create globle wrapper woocommerce/global/wrapper-start.php and woocommerce/global/wrapper-end.php 
	wrapper-start.php: echo '<div id="container"><div id="content" role="main">'; 
    wrapper-end.php: echo '</div></div>';
    
16. customize product title, price and add to cart button as per design, we can customize content-product.php file.

17. // remove breadcrumb

remove_action('woocommerce_before_main_content', 'woocommerce_breadcrumb', 20 );

// remove result count

remove_action('woocommerce_before_shop_loop', 'woocommerce_result_count', 20 );
//remove product archive ordering
remove_action('woocommerce_before_shop_loop', 'woocommerce_catalog_ordering', 30 );
//remove product archive rating
remove_action('woocommerce_after_shop_loop_item_title', 'woocommerce_template_loop_rating', 5 );

// remove archive product default sidebar

remove_action('woocommerce_sidebar','woocommerce_get_sidebar', 10);

18. Add icon in add to cartbutton
 	go to loop/add-to-cart.php file and add icon class before %s.

19. crate custome sidebar in theme_support.php(Register Sidebar first)

<?php 

add_action( 'widgets_init', 'eshoppere_widgets_init' );
function eshoppere_widgets_init() {
    register_sidebar( array(
        'name' => __( 'Shop Page Sidebar', 'theme-slug' ),
        'id' => 'sidebar-shop',
        'description' => __( 'Widgets in this area will be shown on Shop and product Category page.', 'theme-slug' ),
        'before_widget' => '<li id="%1$s" class="widget shop-widget %2$s">',
	'after_widget'  => '</li>',
	'before_title'  => '<h2 class="shopwidgettitle">',
	'after_title'   => '</h2>',
    ) );
	
	register_sidebar( array(
        'name' => __( 'Single Product Sidebar', 'theme-slug' ),
        'id' => 'single-product',
        'description' => __( 'Widgets in this area will be shown on single product page.', 'theme-slug' ),
        'before_widget' => '<li id="%1$s" class="widget single-product %2$s">',
	'after_widget'  => '</li>',
	'before_title'  => '<h2 class="singleproductwidgettitle">',
	'after_title'   => '</h2>',
    ) );
	
	register_sidebar( array(
        'name' => __( 'Page Sidebar', 'theme-slug' ),
        'id' => 'page-product',
        'description' => __( 'Widgets in this area will be shown on  page.', 'theme-slug' ),
        'before_widget' => '<li id="%1$s" class="widget page-widget %2$s">',
	'after_widget'  => '</li>',
	'before_title'  => '<h2 class="pagewidgettitle">',
	'after_title'   => '</h2>',
    ) );
	
	
	
	
}

20. After Register call sidebar widget in sidebar section

<?php if ( is_active_sidebar( 'sidebar-shop' ) ) : ?>
<?php dynamic_sidebar( 'sidebar-shop' ); ?>
<?php endif; ?>

21. Put Appropriate widget in sidebar section as per requirement (Woocommerce Ajax product filter: Advance ajax product filter) and download and upload and activate.
22. Customize Add to cart button. Go to file and search function "woocommerce_template_loop_add_to_cart" copy from content-product and this function exist in plugin folder /plugin/woocommerce/includes/wc-template-functions.php
    and this function return data to our overwrite template function which exist in /themename/woocommerce/loop/add-to-cart.php and add icon near the %s symbol.
    global $product;

echo apply_filters( 'woocommerce_loop_add_to_cart_link',
	sprintf( '<a rel="nofollow" href="%s" data-quantity="%s" data-product_id="%s" data-product_sku="%s" class="%s"><i class="fa fa-shopping-cart"></i> %s</a>',
		esc_url( $product->add_to_cart_url() ),
		esc_attr( isset( $quantity ) ? $quantity : 1 ),
		esc_attr( $product->id ),
		esc_attr( $product->get_sku() ),
		esc_attr( isset( $class ) ? $class : 'button' ),
		esc_html( $product->add_to_cart_text() )
	),
$product );

23. Customization of single-product.php file and div class as per design and style.
24. Single Product Image customization(Slider):
	-go to content-single-product.php
	-copy function woocommerce_show_product_images and search where it exist in plugin file.
	-it exist in /plugin/woocommerce/includes/wc-template-functions.php.It is here
		if ( ! function_exists( 'woocommerce_show_product_images' ) ) {

	/**
	 * Output the product image before the single product summary.
	 *
	 * @subpackage	Product
	 */
	function woocommerce_show_product_images() {
		wc_get_template( 'single-product/product-image.php' );
		}
	}
	-this function back to you exists in theme woocommerce folder that is wc_get_template( 'single-product/product-image.php' );
	-In product-image.php file, the function "woocommerce_product_thumbnails" function exists and find it.
	-to customization of sigle product slider:
	   1. first findout the hook that is where it is from exist.
	   2. secondly, after find the action hook, then remove it using remove_action('woocommerce_product_thumbnails', 'woocommerce_show_product_thumbnails', 20);  
	   3. after remove action we can hook the customized image carousel funtion to hook the same hook function where remove action hook used that is:
	      "woocommerce_product_thumbnails" hook using add_action('woocommerce_product_thumbnails','kanchan_eshop_add_carosuelon_product_page')
	      
	 add_action('woocommerce_product_thumbnails', 'kanchan_eshop_add_carosuelon_product_page');

function kanchan_eshop_add_carosuelon_product_page(){
	global $post, $product, $woocommerce;

$attachment_ids = $product->get_gallery_attachment_ids();
		if($attachment_ids):
	
	?>
						<div id="similar-product" class="carousel slide" data-ride="carousel">
								
								  <!-- Wrapper for slides -->
								    <div class="carousel-inner">
									<?php 
										$i = 0;
										foreach($attachment_ids as $attachment_id ):
										$image_link = wp_get_attachment_url( $attachment_id );
										?> <div class="item  <?php if( $i == 0 ){ echo 'active';} ?>">
										  <img src="<?php echo $image_link;  ?>" alt="">
										  
										</div>
										<?php $i++;  endforeach; ?>
										
									</div>

								  <!-- Controls -->
								  <a class="left item-control" href="#similar-product" data-slide="prev">
									<i class="fa fa-angle-left"></i>
								  </a>
								  <a class="right item-control" href="#similar-product" data-slide="next">
									<i class="fa fa-angle-right"></i>
								  </a>
							</div>
	<?php
	
	endif;
}



	      

25. Show cart contents / total in header.

To display the cart contents and total in your template use something like:
<a class="cart-customlocation" href="<?php echo wc_get_cart_url(); ?>" title="<?php _e( 'View your shopping cart' ); ?>"><?php echo sprintf ( _n( '%d item', '%d items', WC()->cart->get_cart_contents_count() ), WC()->cart->get_cart_contents_count() ); ?> - <?php echo WC()->cart->get_cart_total(); ?></a>

To ajaxify your cart viewer so it updates when an item is added (via ajax) use:

add_filter('add_to_cart_fragments', 'woocommerce_header_add_to_cart_fragment');
 
function woocommerce_header_add_to_cart_fragment( $fragments ) {
	global $woocommerce;
	
	ob_start();
	
	?>
	<a class="cart-customlocation" href="<?php echo $woocommerce->cart->get_cart_url(); ?>" title="<?php _e('View your shopping cart', 'woothemes'); ?>"><?php echo sprintf(_n('%d item', '%d items', $woocommerce->cart->cart_contents_count, 'woothemes'), $woocommerce->cart->cart_contents_count);?> - <?php echo $woocommerce->cart->get_cart_total(); ?></a>
	<?php
	
	$fragments['a.cart-customlocation'] = ob_get_clean();
	
	return $fragments;
}

26. Geting single product meta field value with custom function

function eshopper_get_sku_after_title(){
			global $product;
			$sku = $product->get_sku();
			$sku_num = ( $sku ? $sku : 'N/A' );
			?>
			<div class="custom-sku"> 
			<?php    _e('Web Id: ', 'eshopper');  echo $sku_num; ?>
			</div>
		<?php 
			
		}		

add_action('woocommerce_single_product_summary', 'eshopper_get_sku_after_title', 6 );

remove_action('woocommerce_single_product_summary', 'woocommerce_template_single_excerpt', 20 );
function eshopper_product_ava (){
	global $product;
	
	$isstock = ($product->is_in_stock( ) ? 'Yes': 'No');
	echo '<div class="eshopper-aval">';
	_e('Availability: ','eshopper' );  echo $isstock;
	echo '</div>';
}
add_action('woocommerce_single_product_summary', 'eshopper_product_ava', 39 );


function add_brand_to_product_page(){
	$all_terms = wp_get_post_terms( get_the_Id(), 'brand' );
	foreach($all_terms as $term ){
		if($term->name){
			echo '<b>Brand: </b>'.$term->name;
		}
	}
	
}

add_action('woocommerce_single_product_summary', 'add_brand_to_product_page', 45 );


function custom_socialshare(){
	?>
	<div class="shoiacl-product"> 
		<a class="btn btn-primary " href=""> <i class="fa fa-facebook"></i> Facebook </a>
		<a class="btn btn-primary " href=""> <i class="fa fa-google-plus"></i> Google Plus </a>
		
	
	</div>
	<?php 
}
add_action('woocommerce_single_product_summary', 'custom_socialshare', 50 );





